import React, { useEffect, useState } from 'react';

const ChecklistMorning = () => {
  const [currentItem, setCurrentItem] = useState(-1);
  const [mostrarChecklist, setMostrarChecklist] = useState(false);

  const horaActual = new Date();
  const hora = horaActual.getHours();
  const minutos = horaActual.getMinutes();
  const ahoraEnMinutos = hora * 60 + minutos;

  const inicio = 7 * 60;      // 7:00 a.m.
  const fin = 9 * 60 + 30;    // 9:30 a.m.

  const checklistItems = [
    'âœ… Revisar noticias macroeconÃ³micas (premercado)',
    'âœ… Validar fuerza relativa de META, NVDA, AMD',
    'âœ… Verificar tendencia en marcos mayores (1H, 4H)',
    'âœ… Confirmar osciladores CODE (RSI, MACD)',
    'âœ… Validar soporte institucional en TradingView-CEREBRO',
    'âœ… Revisar GAP o posibles movimientos en apertura',
    'âœ… Escoger el activo mÃ¡s fuerte para TAXI',
    'âœ… Cargar plan en memoria CODE antes de 9:30 a.m.',
  ];

  useEffect(() => {
    if (ahoraEnMinutos >= inicio && ahoraEnMinutos <= fin) {
      setMostrarChecklist(true);
      const intervalo = setInterval(() => {
        setCurrentItem((prev) => {
          if (prev < checklistItems.length - 1) return prev + 1;
          clearInterval(intervalo);
          return prev;
        });
      }, 20000); // cada 20 segundos aparece un Ã­tem

      return () => clearInterval(intervalo);
    }
  }, []);

  if (!mostrarChecklist) return null;

  return (
    <div className="bg-gray-800 rounded-2xl p-4 shadow mt-4">
      <h2 className="text-xl font-bold mb-2">ðŸ•– Checklist previo a TAXI (7:00 - 9:30 a.m.)</h2>
      <ul className="list-disc list-inside text-sm">
        {checklistItems.slice(0, currentItem + 1).map((item, index) => (
          <li key={index} className="mb-1">{item}</li>
        ))}
      </ul>
    </div>
  );
};

export default ChecklistMorning;

